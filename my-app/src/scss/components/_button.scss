//.button-classic {
//  display: block;
//  width: remcalc(140);
//  margin: 0 auto;
//  padding: remcalc(12) 0;
//  background: $gradient-blue-green;
//  border: none;
//  border-radius: remcalc(5);
//  text-align: center;
//  box-shadow: 0 remcalc(2) remcalc(5) $gradi-green;
//  transition: all 0.3s ease 0s;
//  cursor: pointer;
//  outline: none;
//
//  @include breakpoint(small) {
//    width: remcalc(180);
//    padding: remcalc(15) 0;
//    @include just-rythm(18);
//  }
//
//  &:hover {
//    background: $gradient-blue-green-revers;
//  }
//}

.svg-button-wrapper {
  height: remcalc(35);
  margin: 0 auto 0 remcalc(-15);
  position: relative;
  width: remcalc(180);

  @include breakpoint(small) {
    height: remcalc(45);
  }
}

.button-shape {
  fill: transparent;
  stroke-dasharray: 140 540;
  stroke-dashoffset: -240;
  stroke-width: 2px;
  stroke: $gradi-green;

  @include breakpoint(small) {
    stroke-dashoffset: -250;
  }
}

.button-text {
  color: $clear-white;
  @include just-rythm(20);
  line-height: remcalc(45);
  position: relative;
  top: remcalc(-48);
  padding: 0 remcalc(15);

  @include breakpoint(small) {
    line-height: remcalc(32);
  }
}

@keyframes draw {
  0% {
    stroke-dasharray: 140 540;
    stroke-dashoffset: -250;
    stroke-width: remcalc(8);
  }
  100% {
    stroke-dasharray: 760;
    stroke-dashoffset: 0;
    stroke-width: 2px;
    opacity: 1;
  }
}

.svg-button-wrapper {
  &:hover {
  .button-shape {
      -webkit-animation: 4s draw ease;
      animation: 4s draw ease;
      //animation-iteration-count: infinite;
    }
  }
}


.project-button-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;

  @include breakpoint(small) {
    flex-direction: row;
  }
}

//.project-button {
//  width: 100%;
//  margin-bottom: remcalc(10);
//  padding: 15px 0;
//  color: $gradi-green;
//  text-align: center;
//  letter-spacing: 1px;
//  font-family: $robot-thin;
//  font-weight: $font-bold;
//  //border-radius: remcalc(5);
//  text-transform: uppercase;
//  border: 2px solid $gradi-green;
//
//  &.see-project {
//    background: $gradi-green;
//    color: $gray;
//
//    @include breakpoint(small) {
//      margin-right: remcalc(20);
//    }
//  }
//}

.project-large-button {
  @include just-rythm(16);
  color: $clear-white;

  @include breakpoint(medium) {
    @include just-rythm(21);
    @include center($extend: false);
    top: 44%;
  }

 &.position-left {
   @include breakpoint(medium) {
     left: remcalc(-100);
     right: auto;
     transform: rotate(-90deg);
   }
  }

 &.position-right {
   @include breakpoint(medium) {
     right: remcalc(-110);
     left: auto;
     transform: rotate(90deg);
   }
  }
}




@mixin jitter($steps:10, $strX:10, $strY:10){
  @keyframes jitter-#{$steps}-#{$strX}-#{$strY} {
    $i: $steps;
    @while $i > 0 {
      #{$i/$steps*100}% {
        $effectFalloff: 1-$i/$steps;
        $x: (random($strX) - $strX/2) * $effectFalloff + px;
        $y: (random($strY) - $strY/2) * $effectFalloff + px;
        transform: translate($x, $y);
      }
      $i: $i - 1;
    }
  }
}
@include jitter(20, 20, 8);
@include jitter(20, 21, 8);
@include jitter(20, 22, 8);
@include jitter(20, 23, 8);
@include jitter(20, 24, 8);

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

.glitch-btn {
  user-select: none;
  cursor: pointer;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  letter-spacing: .1em;
  color: $clear-white;
  line-height: 1.4;
  text-transform: uppercase;
  z-index: 1;

  $hoverDur: .8s;
  transition: all $hoverDur $ease-out-quint;
  &:hover {
    color: $clear-black;
    &:before {
      background: $clear-white;
      transform: translateY(-50%) scaleY(1.5);
    }
  }

  &:before {
    content: '';
    position: absolute;
    top: 50%;
    left: -18px;
    background: rgba(white, .1);
    width: 100%;
    height: 80%;
    padding: 0 remcalc(15);
    z-index: -1;

    transition: all $hoverDur $ease-out-quint;
  }

  &:after {
    content: '';
    position: absolute;
    top: 50%;
    left: -18px;
    background: rgba(black, 0);
    width: 100%;
    height: 100%;
    padding: 0 remcalc(15);
  }

  // glitch effect
  //
  .mask {
    position: absolute;
    -webkit-backface-visibility: hidden;

    height: 20%;
    width: 100%;
    overflow: hidden;
    display: none;
    span {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
    }
  }

  $i: 6;
  $steps: $i;
  @while $i > 1 {
    .mask:nth-child(#{$i}) {
      top: ($i - 1) * 20%;
      span {
        top: -($i - 1) * 100%;
      }
    }
    $i: $i - 1;
  }

  &:hover {
    .label {
      animation: fade-in .8s both;
    }
    .mask {
      display: block;
    }

    $j: 6;
    $steps: $j;
    @while $j > 1 {
      .mask:nth-child(#{$j}) {
        animation:jitter-20-#{19+$j}-8 .3s both;
      }
      $j: $j - 1;
    }

  }

}
